"use strict";var path=require("path"),webpack=require("webpack"),merge=require("webpack-merge"),CopyWebpackPlugin=require("copy-webpack-plugin"),HtmlWebpackPlugin=require("html-webpack-plugin"),utils=require("../utils"),config=require(utils.rootPath("env.param.config")),baseWebpackConfig=require("../basic/webpack.base.conf"),HOST=process.env.HOST,PORT=process.env.PORT&&Number(process.env.PORT),_is_mock="mock"===process.env.env_config,env=require(utils.rootPath("env.config"))[_is_mock?"mock_env":"dev_env"],devWebpackConfig={mode:"development",module:{},devtool:config.dev.devtool,devServer:{clientLogLevel:"warning",historyApiFallback:{rewrites:[{from:/.*/,to:path.posix.join(config.dev.assetsPublicPath,"index.html")}]},contentBase:!1,compress:!0,hot:config.dev.hot,host:HOST||config.dev.host,port:PORT||config.dev.port,open:config.dev.autoOpenBrowser,overlay:!!config.dev.errorOverlay&&{warnings:!1,errors:!0},publicPath:config.dev.assetsPublicPath,proxy:config.dev.proxyTable,quiet:config.dev.quiet,stats:"errors-only",before:_is_mock?require("../mock-server/index"):function(e){},watchOptions:{poll:config.dev.poll}},plugins:[new webpack.DefinePlugin({"process.env":env}),new webpack.HotModuleReplacementPlugin,new webpack.NamedModulesPlugin,new webpack.NoEmitOnErrorsPlugin,new HtmlWebpackPlugin({filename:"index.html",template:"index.html",inject:!0}),new CopyWebpackPlugin([{from:utils.rootPath("./static"),to:config.dev.assetsSubDirectory,ignore:[".*"]}])]};module.exports=merge(baseWebpackConfig,devWebpackConfig);